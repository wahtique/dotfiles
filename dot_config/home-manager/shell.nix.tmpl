{ pkgs, ... }:
{
  home.packages = with pkgs; [
    zinit # plugin manager
    cod # turn any --help into completion
    tree # pretty print directories
    fastfetch # flexx your OS : alternative to freshly deceased neofetch
    silver-searcher # ag
    nerd-fonts.jetbrains-mono
    meld # gui differ
    banner # print big banners
    figlet # better banners
    toilet # even better banners
    dust # disk usage for humans
    yazi # file explorer
    ruff  # python linter
    sd # sed for humans
    bunyan-rs # color logs

  ];

  systemd.user = {
    timers.zinit-update = {
      Unit.Description = "zinit plugins update";

      Install.WantedBy = [ "timers.target" ];

      Timer = {
        OnCalendar = "weekly";
        Unit = "zinit-update.service";
        Persistent = true;
      };
    };
    services.zinit-update = {
      Unit.Description = "zinit plugins update";

      # force sh to run the update all in zsh interactive mode
      Service.ExecStart = toString
        (pkgs.writeShellScript "zinit-update.zsh" ''
          echo "Update zinit plugins"
          /usr/bin/env zsh -i -c "zinit update --all"
        '');
    };
  };

  programs = {
    atuin = {
      enable = true;
      enableZshIntegration = true;
    };
    bat = {
      enable = true;
      themes = {
        catppucin-mocha = {
          src = pkgs.fetchurl {
            url = "https://raw.githubusercontent.com/catppuccin/bat/main/themes/Catppuccin%20Mocha.tmTheme";
            hash = "sha256-UDJ6FlLzwjtLXgyar4Ld3w7x3/zbbBfYLttiNDe4FGY=";
          };
        };
      };
      config = {
        theme = "catppucin-mocha";
      };
    };
    bottom = {
      enable = true;
      settings = {
        flags = {
          avg_cpu = true;
          group_processes = true;
          tree = true;
          temperature_type = "c";
          # catppuccin mocha theme
          # https://github.com/catppuccin/bottom
          styles = {
            tables = {
              headers = { color = "#f5e0dc"; };
            };
            cpu = {
              all_entry_color = "#f5e0dc";
              avg_entry_color = "#eba0ac";
              cpu_core_colors = ["#f38ba8" "#fab387" "#f9e2af" "#a6e3a1" "#74c7ec" "#cba6f7"];
            };
            memory = {
              ram_color = "#a6e3a1";
              swap_color = "#fab387";
              gpu_colors = ["#74c7ec" "#cba6f7" "#f38ba8" "#fab387" "#f9e2af" "#a6e3a1"];
              arc_color = "#89dceb";
            };
            network = {
              rx_color = "#a6e3a1";
              tx_color = "#f38ba8";
            };
            widgets = {
              widget_title = { color = "#f2cdcd"; };
              border_color = "#585b70";
              selected_border_color = "#f5c2e7";
              text = { color = "#cdd6f4"; };
              selected_text = { color = "#11111b"; bg_color = "#cba6f7"; };
            };
            graphs = {
              graph_color = "#a6adc8";
            };
            battery = {
              high_battery_color = "#a6e3a1";
              medium_battery_color = "#f9e2af";
              low_battery_color = "#f38ba8";
            };
          };
        };
      };
    };
    direnv = {
      enable = true;
      enableZshIntegration = true;
      nix-direnv.enable = true; 
    };
    eza = {
      enable = true;
      enableZshIntegration = true;
      git = true;
      icons = "auto";
    };
    fd = {
      enable = true;
    };
    fzf = {
      enable = true;
      enableZshIntegration = true;
      # make fzf search hidden files too
      defaultCommand = "ag --hidden --ignore .git -g '' ";
    };
    btop = {
      enable = true;
      settings = {
        theme = "catppuccin_mocha";
      };
    };
    htop.enable = true;
    navi = {
      enable = true;
      enableZshIntegration = true;
    };
    ripgrep = {
      enable = true;
      arguments = [
        "--max-columns-preview"
        "--pretty"
      ];
    };
    tealdeer = {
      enable = true;
      settings.updates.auto_update = true;
    };
    oh-my-posh = {
      enable = true;
      enableZshIntegration = true;
      settings = builtins.fromJSON(
        builtins.unsafeDiscardStringContext(
          builtins.readFile "/home/{{ .username }}/.config/oh-my-posh/bubbles-white.omp.json"
      ));
    };
    zsh = {
      enable = true;
      autosuggestion = {
        enable = true;
        highlight = "fg=#6f6c5d";
      };
      history = {
        path = "$HOME/.histfile";
        save = 10000;
        size = 10000;
      };
      sessionVariables = {
        # ALT+E(dit) : fuzzy search for files to open in $EDITOR
        FZF_FINDER_EDITOR_BINDKEY="^[e";
        # ALT+R(ead) : fuzzy search for files to open with default pager
        FZF_FINDER_PAGER_BINDKEY="^[r";
        # make fzf finder plugin search hidden files too
        FZF_FINDER_FD_OPTS="--hidden -t f";
        # print path before cding for zoxide
        _ZO_ECHO = 1;
      };
      shellAliases = {
        # HOME MANAGER
        hm = "home-manager";
        hms = "home-manager switch";
        # CHEZMOI
        cz = "chezmoi";
        cza = "chezmoi apply";
        czu = "chezmoi update";
        # SHELL TOOLS
        # eza is a maintained fork of exa
        exa = "eza";
        # compatibility fix for latest versions of eza  with zsh-exa
        ls = "eza --group-directories-first --icons --color-scale all";
        # VS CODE
        c = "code";
        ci = "code-insiders";
        # zoxide
        cd = "z";
        # git
        lg = "lazygit";
        # just
        j = "just";
      };
      # set some zsh options 
      # autocd = cd into into directories without typing cd
      # extendedglob = enable advanced globbing
      # nomatch = don't throw an error if a glob doesn't match
      # notify = notify when a job completes
      # unset beep = disable the bell sound
      # then 
      # init zinit and load plugins
      initExtraBeforeCompInit = ''
        setopt extendedglob nomatch notify
        unsetopt beep
        # init zinit
        source "${pkgs.zinit}/share/zinit/zinit.zsh"
        source $HOME/.plugins.zsh
        '';
      completionInit = ''
        autoload -Uz compinit
        compinit
        zinit cdreplay -q
      '';
      initExtra = ''
        if [[ -f ~/.secrets ]]; then
          source ~/.secrets
        fi
        if [[ -f ~/.profile ]]; then
          source ~/.profile
        fi
      '';
    };
    zoxide = {
      enable = true;
      enableZshIntegration = true;
    };
  };
}