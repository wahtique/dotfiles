{ pkgs, ... }:
{
  home.packages = with pkgs; [
    zinit # plugin manager
    cod # turn any --help into completion
    tree # pretty print directories
    neofetch # flexx your OS
    silver-searcher # ag
    (nerdfonts.override { fonts = [ "JetBrainsMono" ]; })
    meld # gui differ
    banner # print big banners
    figlet # better banners
    toilet # even better banners
  ];

  programs = {
    atuin = {
      enable = true;
      enableZshIntegration = true;
    };
    bat.enable = true;
    direnv = {
      enable = true;
      enableZshIntegration = true;
      nix-direnv.enable = true; 
    };
    eza = {
      enable = true;
      enableZshIntegration = true;
      git = true;
      icons = true;
    };
    fd = {
      enable = true;
    };
    fzf = {
      enable = true;
      enableZshIntegration = true;
      # make fzf search hidden files too
      defaultCommand = "ag --hidden --ignore .git -g '' ";
    };
    gh = {
      enable = true;
      extensions = with pkgs; [
        gh-dash # dashboard
        gh-eco # explore the ecosystem
        gh-markdown-preview # preview md
      ];
      settings = {
        git_protocol = "ssh";
        editor = "code";
        prompt = "enabled";
        pager = "bat";
        aliases = {
          md = "markdown-preview";
        };
      };
    };
    htop.enable = true;
    navi = {
      enable = true;
      enableZshIntegration = true;
    };
    ripgrep = {
      enable = true;
      arguments = [
        "--max-columns-preview"
        "--pretty"
      ];
    };
    tealdeer = {
      enable = true;
      settings.updates.auto_update = true;
    };
    oh-my-posh = {
      enable = true;
      enableZshIntegration = true;
      settings = builtins.fromJSON(
        builtins.unsafeDiscardStringContext(
          builtins.readFile "/home/{{ .username }}/.config/oh-my-posh/bubbles-white.omp.json"
      ));
    };
    zsh = {
      enable = true;
      autosuggestion = {
        enable = true;
        highlight = "fg=#6f6c5d";
      };
      history = {
        path = "$HOME/.histfile";
        save = 10000;
        size = 10000;
      };
      sessionVariables = {
        # ALT+E(dit) : fuzzy search for files to open in $EDITOR
        FZF_FINDER_EDITOR_BINDKEY="^[e";
        # ALT+R(ead) : fuzzy search for files to open with default pager
        FZF_FINDER_PAGER_BINDKEY="^[r";
        # make fzf finder plugin search hidden files too
        FZF_FINDER_FD_OPTS="--hidden -t f";
        # print path before cding for zoxide
        _ZO_ECHO = 1;
      };
      shellAliases = {
        # HOME MANAGER
        hm = "home-manager";
        hms = "home-manager switch";
        # CHEZMOI
        cz = "chezmoi";
        cza = "chezmoi apply";
        czu = "chezmoi update";
        # SHELL TOOLS
        # eza is a maintained fork of exa
        exa = "eza";
        # compatibility fix for latest versions of eza  with zsh-exa
        ls = "eza --group-directories-first --icons --color-scale all";
        # VS CODE
        c = "code";
        ci = "code-insiders";
      };
      # set some zsh options 
      # autocd = cd into into directories without typing cd
      # extendedglob = enable advanced globbing
      # nomatch = don't throw an error if a glob doesn't match
      # notify = notify when a job completes
      # unset beep = disable the bell sound
      # then 
      # init zinit and load plugins
      initExtraBeforeCompInit = ''
        setopt extendedglob nomatch notify
        unsetopt beep
        # init zinit
        ZINIT_HOME="''${XDG_DATA_HOME:-''${HOME}/.local/share}/zinit/zinit.git"
        source "''${ZINIT_HOME}/zinit.zsh"
        fpath+=(
          $HOME/.local/share/zinit/completions  
        )
        source $HOME/.plugins.zsh
        '';
      completionInit = ''
        autoload -Uz compinit
        compinit
        zinit cdreplay -q
      '';
      initExtra = ''
        if [[ -f ~/.secrets ]]; then
          source ~/.secrets
        fi
        if [[ -f ~/.profile ]]; then
          source ~/.profile
        fi
      '';
    };
    zoxide = {
      enable = true;
      enableZshIntegration = true;
    };
  };
}