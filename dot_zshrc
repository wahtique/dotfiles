#############################################
################# ZSH #######################
#############################################

# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000
setopt autocd extendedglob nomatch notify
# remove terminal beeps
unsetopt beep
bindkey -v
# trick found on SO to prevent ctrl+ left or right arrow
# from actually printing something 
bindkey "^[[1;5C" forward-word
bindkey "^[[1;5D" backward-word
# End of lines configured by zsh-newuser-install
# The following lines were added by compinstall
zstyle :compinstall filename '/home/wahtique/.zshrc'

autoload -Uz compinit

# >>> scala-cli completions >>>
fpath=("/home/wahtique/.local/share/scalacli/completions/zsh" $fpath)
# <<< scala-cli completions <<<

compinit
# End of lines added by compinstall

# PROMPT

############################################
########### PROMPT #########################
############################################

eval "$(oh-my-posh init zsh --config ~/.custom-theme.omp.yaml)"
enable_poshtransientprompt

############################################
############# ZINIT ########################
############################################

### Added by Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})â€¦%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zdharma-continuum/zinit-annex-as-monitor \
    zdharma-continuum/zinit-annex-bin-gem-node \
    zdharma-continuum/zinit-annex-patch-dl \
    zdharma-continuum/zinit-annex-rust

### End of Zinit's installer chunk

# git aliases
zinit snippet OMZP::git
# <esc> <esc> for the fuck
if (( $+commands[thefuck] )); then 
  zinit ice wait'1' lucid  
  zinit light laggardkernel/zsh-thefuck
fi
# aliases exa by ls
(( $+commands[exa])) && zinit light "RitchieS/zsh-exa"
# add colors to `man`
zinit light ael-code/zsh-colored-man-pages
# ssh agent
zinit ice use"ssh-agent.zsh" from"github"
zinit load bobsoppe/zsh-ssh-agent
# `extract <filename>` and voila !
zinit light le0me55i/zsh-extract
# timewarrior aliases
(( $+commands[timew] )) && zinit light svenXY/timewarrior
# generate autocompletes from `--help` for most cli tools
# requires the corresponding bin
(( $+commands[cod] )) && zinit wait lucid for dim-an/cod
# FZF dependent plugins
if (( $+commands[fzf] )); then;
  # fzf for tab completion
  zinit light Aloxaf/fzf-tab
  # better cd using fzf
  zinit ice use"init.zsh"
  zinit load "b4b4r07/enhancd"
  # A zsh plugin to search in the local tree of subdirectories for files
  # ALT+R to search hand Read
  # ALT+E to search and Edit
  zinit load "wahtique/zsh-plugin-fzf-finder"
  # CTRL+R to search history
  zinit ice lucid wait'0'
  zinit light joshskidmore/zsh-fzf-history-search
  # CTRL+N for cheatsheets
  # REQUIRES NAVI
  if (( $+commands[navi])); then;
    zinit load "icatalina/zsh-navi-plugin"
    # use ctrl+n to show cheat sheets
    bindkey '^n' navi_widget
  fi
fi
# these should be after the fzf plugins
zinit load "zsh-users/zsh-autosuggestions"
export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#6f6c5d"
zinit light "zdharma/fast-syntax-highlighting"

############################################
########### ENVIRONMENT ####################
############################################

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"

# PATH UPDATES
path+=(
  # custom tools which dont really belong in /bin or /usr/bin
  "$HOME/tools"
  # coursier + g8
  "$HOME/.local/share/coursier/bin"
  # rust
  "$HOME/.cargo/bin"
)
export PATH

# intellij options
export IDE_VM_OPTIONS="-Xmx2048m"

# first needed by chezmoi
# most likely also expected by other tools
export EDITOR=vim

# make fzf search hidden files too
export FZF_DEFAULT_COMMAND='ag --hidden --ignore .git -g ""'

# make fzf finder plugin search hidden files too
export FZF_FINDER_FD_OPTS="--hidden -t f"

# aliases
# scala 
alias sc=scala-cli
alias cs=coursier
# shell
alias cz=chezmoi
