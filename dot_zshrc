#############################################
################# ZSH #######################
#############################################

# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000
setopt autocd extendedglob nomatch notify
# remove terminal beeps
unsetopt beep
bindkey -v
# trick found on SO to prevent ctrl+ left or right arrow
# from actually printing something 
bindkey "^[[1;5C" forward-word
bindkey "^[[1;5D" backward-word
# End of lines configured by zsh-newuser-install
# The following lines were added by compinstall
zstyle :compinstall filename '/home/wahtique/.zshrc'

autoload -Uz compinit

# >>> scala-cli completions >>>
fpath=("/home/wahtique/.local/share/scalacli/completions/zsh" $fpath)
# <<< scala-cli completions <<<

compinit
# End of lines added by compinstall

# PROMPT

############################################
########### PROMPT #########################
############################################

eval "$(oh-my-posh init zsh --config ~/.custom-theme.omp.yaml)"
enable_poshtransientprompt

############################################
################ ZPLUG #####################
############################################

source ~/.zplug/init.zsh

# zplug handles itself
zplug "zplug/zplug", hook-build:"zplug --self-manage"
# powerline theme
# zplug "romkatv/powerlevel10k", as:theme, depth:1
# git aliases
zplug "plugins/git", from:oh-my-zsh
# <esc> <esc> for the fuck
(( $+commands[thefuck] )) && zplug laggardkernel/zsh-thefuck
# aliases exa by ls
(( $+commands[exa])) && zplug "RitchieS/zsh-exa"
# add colors to `man`
zplug ael-code/zsh-colored-man-pages
# ssh agent
zplug bobsoppe/zsh-ssh-agent, use:ssh-agent.zsh, from:github
# `extract <filename>` and voila !
zplug le0me55i/zsh-extract
# timewarrior aliases
(( $+commands[timew] )) && zplug svenXY/timewarrior
# generate autocompletes from `--help` for most cli tools
# requires the corresponding bin
(( $+commands[cod] )) && zplug dim-an/cod
# FZF dependent plugins
if (( $+commands[fzf] )); then;
  # fzf for tab completion
  zplug "Aloxaf/fzf-tab"
  # better cd using fzf
  zplug "b4b4r07/enhancd", use:init.sh
  # A zsh plugin to search in the local tree of subdirectories for files
  # ALT+R to search hand Read
  # ALT+E to search and Edit
  zplug "wahtique/zsh-plugin-fzf-finder"
  # CTRL+R to search history
  zplug "joshskidmore/zsh-fzf-history-search"
  # CTRL+N for cheatsheets
  # REQUIRES NAVI
  if (( $+commands[navi])); then;
    zplug "icatalina/zsh-navi-plugin"
    # use ctrl+n to show cheat sheets
    bindkey '^n' navi_widget
  fi
fi
# these should be after the fzf plugins
zplug "zsh-users/zsh-autosuggestions"
export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#6f6c5d"
zplug "zdharma/fast-syntax-highlighting"


# Install plugins if there are plugins that have not been installed
# also update because running it everytime is annoying
if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
           echo; zplug install
    fi
    zplug update
fi

# Then, source plugins and add commands to $PATH
zplug load

#############################################
########## POWERLEVEL1OK ####################
#############################################

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

############################################
########### ENVIRONMENT ####################
############################################

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"

# PATH UPDATES
path+=(
  # custom tools which dont really belong in /bin or /usr/bin
  "$HOME/tools"
  # coursier + g8
  "$HOME/.local/share/coursier/bin"
  # rust
  "$HOME/.cargo/bin"
)
export PATH

# intellij options
export IDE_VM_OPTIONS="-Xmx2048m"

# first needed by chezmoi
# most likely also expected by other tools
export EDITOR=vim

# make fzf search hidden files too
export FZF_DEFAULT_COMMAND='ag --hidden --ignore .git -g ""'

# make fzf finder plugin search hidden files too
export FZF_FINDER_FD_OPTS="--hidden -t f"

# aliases
# scala 
alias sc=scala-cli
alias cs=coursier
# shell
alias cz=chezmoi
